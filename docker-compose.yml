version: '3.8'

services:
  traefik:
    image: traefik:v2.4
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php-docker-laravel
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel-network


  db:
    image: mysql:8.0
    container_name: php-docker-laravel-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel-network

  redis:
    image: redis:6.0
    container_name: php-docker-laravel-redis
    networks:
      - laravel-network

  nginx:
    image: nginx:latest
    container_name: php-docker-laravel-nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./src:/var/www/html
    networks:
      - laravel-network
    labels:
      - "traefik.enable=false" # Отключаем проксирование Traefik для Nginx

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: php-docker-laravel-phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${PMA_PORT}:80"
    networks:
      - laravel-network
    labels:
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - laravel-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - laravel-network
    volumes:
      - grafana_data:/var/lib/grafana

  ############################################################
  # Новые сервисы:
  ############################################################

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    container_name: php-docker-laravel-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false  # отключаем безопасность на dev-среде
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - laravel-network

  # Kibana (необязательно, но удобно для отладки)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2
    container_name: php-docker-laravel-kibana
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      xpack.security.enabled: "false"  # аналогично отключаем на dev
    ports:
      - "5601:5601"
    networks:
      - laravel-network
  ############################################################

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: php-docker-laravel-clickhouse
    ports:
      - "9001:9000"  # основной порт (TCP) для драйверов
      - "8123:8123"   # HTTP-интерфейс
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    environment:
      # Пользователь/БД/Пароль — по умолчанию user=default без пароля
      # Можно переопределить при желании
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    networks:
      - laravel-network

networks:
  laravel-network:

volumes:
  dbdata:
  grafana_data:
  esdata:
  clickhouse_data: